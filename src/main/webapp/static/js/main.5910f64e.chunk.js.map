{"version":3,"sources":["utils.js","components/Login.js","components/Register.js","components/Favorites.js","components/CustomSearch.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_ORIGIN","loginUrl","registerUrl","logoutUrl","logout","fetch","method","credentials","then","response","status","Error","topGamesUrl","getTopGames","json","getGameDetailsUrl","searchGameByIdUrl","searchGameById","gameId","searchGameByName","gameName","getGameDetails","data","id","favoriteItemUrl","addFavoriteItem","favItem","headers","body","JSON","stringify","favorite","deleteFavoriteItem","getFavoriteItem","getRecommendedItemsUrl","getRecommendations","Login","onSuccess","useState","displayModal","setDisplayModal","shape","onClick","style","marginRight","title","visible","onCancel","footer","destroyOnClose","name","onFinish","credential","message","success","catch","err","error","preserve","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType","Register","initialValues","remember","register","SubMenu","Menu","MenuKey","Favorites","state","displayDrawer","onDrawerClose","setState","onFavoriteClick","render","props","VIDEO","STREAM","CLIP","icon","StarFilled","placement","width","onClose","mode","defaultOpenKeys","height","borderRight","selectable","EyeOutlined","map","item","href","url","target","rel","broadcaster_name","YoutubeOutlined","VideoCameraOutlined","React","Component","CustomSearch","handleCancel","searchOnClick","onSubmit","game_name","console","log","SearchOutlined","marginLeft","marginTop","TabPane","Tabs","tabKeys","renderCardTitle","loggedIn","favs","favOnChange","isFav","find","fav","favOnClick","StarOutlined","overflow","textOverflow","renderCardGrid","grid","xs","sm","md","lg","xl","dataSource","renderItem","alt","src","thumbnail_url","replace","Home","resources","favoriteItems","favoriteOnChange","favVideos","favStreams","favClips","defaultActiveKey","tab","forceRender","Header","Layout","Content","Sider","App","topGames","onGameSelect","key","customSearchOnSuccess","signinOnSuccess","signoutOnClick","componentDidMount","justify","className","onSelect","LikeOutlined","FireOutlined","game","box_art_url","borderRadius","padding","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.5910f64e.chunk.js","sourcesContent":["const SERVER_ORIGIN = '';\n \nconst loginUrl = `${SERVER_ORIGIN}/login`;\n \nexport const login = (credential) => {\n  return fetch(loginUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    credentials: 'include',\n    body: JSON.stringify(credential)\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to log in');\n    }\n \n    return response.json();\n  })\n}\n \nconst registerUrl = `${SERVER_ORIGIN}/register`;\n \nexport const register = (data) => {\n  return fetch(registerUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data)\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to register');\n    }\n  })\n}\n \nconst logoutUrl = `${SERVER_ORIGIN}/logout`;\n \nexport const logout = () => {\n  return fetch(logoutUrl, {\n    method: 'POST',\n    credentials: 'include',\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to log out');\n    }\n  })\n}\n \nconst topGamesUrl = `${SERVER_ORIGIN}/game`;\n \nexport const getTopGames = () => {\n  return fetch(topGamesUrl).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to get top games');\n    }\n \n    return response.json();\n  })\n}\n \nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`;\n \nconst getGameDetails = (gameName) => {\n  return fetch(`${getGameDetailsUrl}${gameName}`).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to find the game');\n    }\n \n    return response.json();\n  });\n}\n \nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`;\n \nexport const searchGameById = (gameId) => {\n  return fetch(`${searchGameByIdUrl}${gameId}`).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to find the game');\n    }\n    return response.json();\n  })\n}\n \nexport const searchGameByName = (gameName) => {\n  return getGameDetails(gameName).then((data) => {\n    if (data && data.id) {\n      return searchGameById(data.id);\n    }\n \n    throw Error('Fail to find the game')\n  })\n}\n \nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`;\n \nexport const addFavoriteItem = (favItem) => {\n  return fetch(favoriteItemUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    credentials: 'include',\n    body: JSON.stringify({ favorite: favItem })\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to add favorite item');\n    }\n  })\n}\n \nexport const deleteFavoriteItem = (favItem) => {\n  return fetch(favoriteItemUrl, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    credentials: 'include',\n    body: JSON.stringify({ favorite: favItem })\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to delete favorite item');\n    }\n  })\n}\n \nexport const getFavoriteItem = () => {\n  return fetch(favoriteItemUrl, {\n    credentials: 'include',\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to get favorite item');\n    }\n \n    return response.json();\n  })\n}\n \nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`;\n \nexport const getRecommendations = () => {\n  return fetch(getRecommendedItemsUrl, {\n    credentials: 'include',\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to get recommended item');\n    }\n \n    return response.json();\n  })\n}\n","import { Button, Form, Input, message, Modal } from 'antd'\nimport React, { useState } from 'react';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { login } from '../utils'\n \nfunction Login({ onSuccess }) {\n  const [displayModal, setDisplayModal] = useState(false)\n \n  const handleCancel = () => {\n    setDisplayModal(false)\n  }\n \n  const signinOnClick = () => {\n    setDisplayModal(true)\n  }\n \n  const onFinish = (data) => {\n    login(data)\n      .then((data) => {\n        setDisplayModal(false)\n        message.success(`Welcome back, ${data.name}`)\n        onSuccess()\n      }).catch((err) => {\n        message.error(err.message)\n      })\n  }\n \n  return (\n    <>\n      <Button shape=\"round\" onClick={signinOnClick} style={{ marginRight: '20px' }}>\n        Login\n      </Button>\n      <Modal\n        title=\"Log in\"\n        visible={displayModal}\n        onCancel={handleCancel}\n        footer={null}\n        destroyOnClose={true}\n      >\n        <Form\n          name=\"normal_login\"\n          onFinish={onFinish}\n          preserve={false}\n        >\n          <Form.Item\n            name=\"user_id\"\n            rules={[{ required: true, message: 'Please input your Username!' }]}\n          >\n            <Input prefix={<UserOutlined />} placeholder=\"Username\" />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your Password!' }]}\n          >\n            <Input.Password\n              prefix={<LockOutlined />}\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Login\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  )\n}\n \nexport default Login\n","import { Button, Form, Input, message, Modal } from 'antd';\nimport React, { useState } from 'react';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { register } from '../utils';\n \nfunction Register() {\n  const [displayModal, setDisplayModal] = useState(false)\n \n  const handleCancel = () => {\n    setDisplayModal(false)\n  }\n \n  const signupOnClick = () => {\n    setDisplayModal(true)\n  }\n \n  const onFinish = (data) => {\n    register(data)\n      .then(() => {\n        setDisplayModal(false)\n        message.success('Successfully signed up');\n      }).catch((err) => {\n        message.error(err.message);\n      })\n  }\n \n  return (\n    <>\n      <Button shape=\"round\" type=\"primary\" onClick={signupOnClick}>\n        Register</Button>\n      <Modal\n        title=\"Register\"\n        visible={displayModal}\n        onCancel={handleCancel}\n        footer={null}\n        destroyOnClose={true}\n      >\n        <Form\n          name=\"normal_register\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          preserve={false}\n        >\n          <Form.Item\n            name=\"user_id\"\n            rules={[{ required: true, message: 'Please input your Username!' }]}\n          >\n            <Input prefix={<UserOutlined />} placeholder=\"Username\" />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your Password!' }]}\n          >\n            <Input\n              prefix={<LockOutlined />}\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"first_name\"\n            rules={[{ required: true, message: 'Please input your Firstname!' }]}\n          >\n            <Input\n              placeholder=\"firstname\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"last_name\"\n            rules={[{ required: true, message: 'Please input your Lastname!' }]}\n          >\n            <Input\n              placeholder=\"lastname\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Register\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  )\n}\n \nexport default Register;\n","import React from 'react';\nimport { Menu, Button, Drawer } from 'antd';\nimport { EyeOutlined, YoutubeOutlined, VideoCameraOutlined, StarFilled } from '@ant-design/icons';\n \nconst { SubMenu } = Menu;\nconst MenuKey = {\n  Streams: 'streams',\n  Videos: 'videos',\n  Clips: 'clips'\n}\nclass Favorites extends React.Component {\n  state = {\n    displayDrawer: false,\n  }\n \n  onDrawerClose = () => {\n    this.setState({\n      displayDrawer: false,\n    })\n  }\n \n  onFavoriteClick = () => {\n    this.setState({\n      displayDrawer: true,\n    })\n  }\n \n  render = () => {\n    const { VIDEO, STREAM, CLIP } = this.props.data;\n \n    return (\n      <>\n        <Button type=\"primary\" shape=\"round\" onClick={this.onFavoriteClick} icon={<StarFilled />}>\n          My Favorites</Button>\n        <Drawer\n          title=\"My Favorites\"\n          placement=\"right\"\n          width={720}\n          visible={this.state.displayDrawer}\n          onClose={this.onDrawerClose}\n        >\n          <Menu\n            mode=\"inline\"\n            defaultOpenKeys={[MenuKey.Streams]}\n            style={{ height: '100%', borderRight: 0 }}\n            selectable={false}\n          >\n            <SubMenu key={MenuKey.Streams} icon={<EyeOutlined />} title=\"Streams\">\n              {\n                STREAM.map((item) => {\n                  return (\n                    <Menu.Item key={item.id}>\n                      <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {`${item.broadcaster_name} - ${item.title}`}\n                      </a>\n                    </Menu.Item>\n                  )\n                })\n              }\n            </SubMenu>\n            <SubMenu key={MenuKey.Videos} icon={<YoutubeOutlined />} title=\"Videos\">\n              {\n                VIDEO.map((item) => {\n                  return (\n                    <Menu.Item key={item.id}>\n                      <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {`${item.broadcaster_name} - ${item.title}`}\n                      </a>\n                    </Menu.Item>\n                  )\n                })\n              }\n            </SubMenu>\n            <SubMenu key={MenuKey.Clips} icon={<VideoCameraOutlined />} title=\"Clips\">\n              {\n                CLIP.map((item) => {\n                  return (\n                    <Menu.Item key={item.id}>\n                      <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {`${item.broadcaster_name} - ${item.title}`}\n                      </a>\n                    </Menu.Item>\n                  )\n                })\n              }\n            </SubMenu>\n          </Menu>\n        </Drawer>\n      </>\n    )\n  }\n}\n \nexport default Favorites;\n","import React from 'react';\nimport { Button, Form, Input, message, Modal } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { searchGameByName } from '../utils';\n \nclass CustomSearch extends React.Component {\n  state = {\n    displayModal: false\n  }\n \n  handleCancel = () => {\n    this.setState({\n      displayModal: false,\n    })\n  }\n \n  searchOnClick = () => {\n    this.setState({\n      displayModal: true,\n    })\n  }\n \n  onSubmit = (data) => {\n    searchGameByName(data.game_name)\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((err) => {\n        message.error(err.message);\n      })\n  }\n \n  render = () => {\n    return (\n      <>\n        <Button shape=\"round\" onClick={this.searchOnClick} icon={<SearchOutlined />} style={{ marginLeft: '20px', marginTop: '20px'}}>\n          Custom Search</Button>\n        <Modal\n          title=\"Custom Search\"\n          visible={this.state.displayModal}\n          onCancel={this.handleCancel}\n          footer={null}\n        >\n          <Form\n            name=\"custom_search\"\n            onFinish={this.onSubmit}\n          >\n            <Form.Item\n              name=\"game_name\"\n              rules={[{ required: true, message: 'Please enter a game name' }]}\n            >\n              <Input placeholder=\"Game name\" />\n            </Form.Item>\n \n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Search</Button>\n            </Form.Item>\n          </Form>\n        </Modal>\n      </>\n    )\n  }\n}\n \nexport default CustomSearch;\n","import React from 'react';\nimport { Button, Card, List, message, Tabs, Tooltip } from 'antd';\nimport { StarOutlined, StarFilled } from '@ant-design/icons';\nimport { addFavoriteItem, deleteFavoriteItem } from '../utils';\n \nconst { TabPane } = Tabs;\nconst tabKeys = {\n  Streams: 'stream',\n  Videos: 'videos',\n  Clips: 'clips',\n}\n \nconst processUrl = (url) => url\n  .replace('%{height}', '252')\n  .replace('%{width}', '480')\n  .replace('{height}', '252')\n  .replace('{width}', '480');\n \nconst renderCardTitle = (item, loggedIn, favs = [], favOnChange) => {\n  const title = `${item.broadcaster_name} - ${item.title}`;\n \n  const isFav = favs.find((fav) => fav.id === item.id);\n \n  const favOnClick = () => {\n    if (isFav) {\n      deleteFavoriteItem(item).then(() => {\n        favOnChange();\n      }).catch(err => {\n        message.error(err.message)\n      })\n \n      return;\n    }\n \n    addFavoriteItem(item).then(() => {\n      favOnChange();\n    }).catch(err => {\n      message.error(err.message)\n    })\n  }\n \n  return (\n    <>\n      {\n        loggedIn &&\n        <Tooltip title={isFav ? \"Remove from favorite list\" : \"Add to favorite list\"}>\n          <Button shape=\"circle\" icon={isFav ? <StarFilled /> : <StarOutlined />} onClick={favOnClick} />\n        </Tooltip>\n      }\n      <div style={{ overflow: 'hidden', textOverflow: 'ellipsis', width: 450 }}>\n        <Tooltip title={title}>\n          <span>{title}</span>\n        </Tooltip>\n      </div>\n    </>\n  )\n}\n \nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\n  return (\n    <List\n      grid={{\n        xs: 1,\n        sm: 2,\n        md: 2,\n        lg: 2,\n        xl: 2,\n      }}\n      dataSource={data}\n      renderItem={item => (\n        <List.Item style={{ marginRight: '20px' }}>\n          <Card\n            title={renderCardTitle(item, loggedIn, favs, favOnChange)}\n          >\n            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img\n                alt=\"Placeholder\"\n                src={processUrl(item.thumbnail_url)}\n              />\n            </a>\n          </Card>\n        </List.Item>\n      )}\n    />\n  )\n}\n \nconst Home = ({ resources, loggedIn, favoriteItems, favoriteOnChange }) => {\n  const { VIDEO, STREAM, CLIP } = resources;\n  const { VIDEO: favVideos, STREAM: favStreams, CLIP: favClips } = favoriteItems;\n \n  return (\n    <Tabs\n      defaultActiveKey={tabKeys.Streams}\n    >\n      <TabPane tab=\"Streams\" key={tabKeys.Streams} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n        {renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)}\n      </TabPane>\n      <TabPane tab=\"Videos\" key={tabKeys.Videos} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n        {renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)}\n      </TabPane>\n      <TabPane tab=\"Clips\" key={tabKeys.Clips} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n        {renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)}\n      </TabPane>\n    </Tabs>\n  );\n}\n \nexport default Home;\n","import React from 'react';\nimport { Button, Col, Layout, Menu, message, Row } from 'antd';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { getFavoriteItem, getRecommendations, getTopGames, logout, searchGameById } from './utils';\nimport Favorites from './components/Favorites';\nimport { LikeOutlined, FireOutlined } from '@ant-design/icons';\nimport CustomSearch from './components/CustomSearch';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport Home from './components/Home';\n \nconst { Header, Content, Sider } = Layout;\n \nclass App extends React.Component {\n  state = {\n    loggedIn: false,\n    topGames: [],\n    resources: {\n      VIDEO: [],\n      STREAM: [],\n      CLIP: [],\n    },\n    favoriteItems: {\n      VIDEO: [],\n      STREAM: [],\n      CLIP: [],\n    },\n  }\n \n  favoriteOnChange = () => {\n    getFavoriteItem().then((data) => {\n      this.setState({\n        favoriteItems: data,\n        loggedIn: true\n      })\n    }).catch((err) => {\n      message.error(err.message);\n    })\n  }\n \n  onGameSelect = ({ key }) => {\n    if (key === 'Recommendation') {\n      getRecommendations().then((data) => {\n        this.setState({\n          resources: data,\n        })\n      })\n \n      return;\n    }\n \n    searchGameById(key).then((data) => {\n      this.setState({\n        resources: data,\n      })\n    })\n  }\n \n  customSearchOnSuccess = (data) => {\n    this.setState({\n      resources: data,\n    })\n  }\n \n  signinOnSuccess = () => {\n    getFavoriteItem().then((data) => {\n      this.setState({\n        favoriteItems: data,\n        loggedIn: true\n      })\n    }).catch((err) => {\n      message.error(err.message);\n    })\n  }\n \n  signoutOnClick = () => {\n    logout()\n      .then(() => {\n        this.setState({\n          loggedIn: false\n        })\n        message.success(`Successfull signed out`);\n      }).catch((err) => {\n        message.error(err.message);\n      })\n  }\n \n  componentDidMount = () => {\n    getTopGames()\n      .then((data) => {\n        this.setState({\n          topGames: data\n        })\n      })\n      .catch((err) => {\n        message.error(err.message);\n      })\n  }\n \n  render = () => (\n    <Layout>\n      <Header>\n        <Row justify=\"space-between\">\n            <Col>\n              {\n                this.state.loggedIn &&\n                <Favorites data={this.state.favoriteItems} />\n              }\n            </Col>\n            <Col>\n              {\n                this.state.loggedIn ? \n                <Button shape=\"round\" onClick={this.signoutOnClick}>\n                  Logout</Button> :\n                (\n                  <>\n                    <Login onSuccess={this.signinOnSuccess} />\n                    <Register />\n                  </>\n                )\n              }\n            </Col>\n          </Row>\n      </Header>\n      <Layout>\n        <Sider width={300} className=\"site-layout-background\">\n          <CustomSearch onSuccess={this.customSearchOnSuccess} />\n          <Menu\n            mode=\"inline\"\n            onSelect={this.onGameSelect}\n            style={{ marginTop: '10px' }}\n          >\n            <Menu.Item icon={<LikeOutlined />} key=\"Recommendation\">\n              Recommend for you!</Menu.Item>\n            <SubMenu icon={<FireOutlined />} key=\"Popular Games\" title=\"Popular Games\" className=\"site-top-game-list\">\n              {\n                this.state.topGames.map((game) => {\n                  return (\n                    <Menu.Item key={game.id} style={{ height: '50px' }}>\n                      <img \n                        alt=\"Placeholder\"\n                        src={game.box_art_url.replace('{height}', '40').replace('{width}', '40')}\n                        style={{ borderRadius: '50%', marginRight: '20px' }}\n                      />\n                      <span>\n                        {game.name}\n                      </span>\n                    </Menu.Item>\n                  )\n                })\n              }\n            </SubMenu>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              height: 800,\n              overflow: 'auto'\n            }}\n          >\n            <Home \n              resources={this.state.resources} \n              loggedIn={this.state.loggedIn} \n              favoriteItems={this.state.favoriteItems} \n              favoriteOnChange={this.favoriteOnChange}\n            />\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}